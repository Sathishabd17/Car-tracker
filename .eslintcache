[{"D:\\React.js\\csv_to_table\\src\\App.js":"1","D:\\React.js\\csv_to_table\\src\\index.js":"2","D:\\React.js\\csv_to_table\\src\\reportWebVitals.js":"3","D:\\React.js\\csv_to_table\\src\\Table.js":"4","D:\\React.js\\csv_to_table\\src\\Sort.js":"5","D:\\React.js\\csv_to_table\\src\\Pagination.js":"6"},{"size":1284,"mtime":1611464541540,"results":"7","hashOfConfig":"8"},{"size":513,"mtime":1611464570444,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611061200932,"results":"10","hashOfConfig":"8"},{"size":1287,"mtime":1611463412081,"results":"11","hashOfConfig":"8"},{"size":1935,"mtime":1611463872461,"results":"12","hashOfConfig":"8"},{"size":683,"mtime":1611463582203,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19ker34",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React.js\\csv_to_table\\src\\App.js",[],"D:\\React.js\\csv_to_table\\src\\index.js",[],"D:\\React.js\\csv_to_table\\src\\reportWebVitals.js",[],"D:\\React.js\\csv_to_table\\src\\Table.js",[],"D:\\React.js\\csv_to_table\\src\\Sort.js",["27"],"import React, { useState, useEffect } from 'react';\r\nimport Table from \"./Table\";\r\nimport Pagination from './Pagination';\r\n\r\nconst Sort = (props) => {\r\n    const [data, setData] = useState(props.data);\r\n    const [direction, setDirection] = useState({\r\n        0: 'asc',\r\n        4: 'asc',\r\n        5: 'asc',\r\n        7: 'asc',\r\n        8: 'asc'\r\n    });\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [rowsPerPage] = useState(15);\r\n\r\n    const onSort = (index) => {\r\n        if(index === 0 || index === 8)\r\n        {\r\n            setData(data.sort((a,b) => (\r\n                direction[index] === 'asc'\r\n                ? (a[index] > b[index]) - (a[index] < b[index])\r\n                : (a[index] < b[index]) - (a[index] > b[index])\r\n                )\r\n            ));\r\n            setDirection({\r\n                [index]: direction[index] === 'asc'\r\n                ? 'desc' : 'asc'\r\n                }\r\n            );\r\n        }\r\n        else\r\n        {\r\n            setData(data.sort((a,b) => (\r\n                direction[index] === 'asc'\r\n                ? a[index] - b[index]\r\n                : b[index] - a[index]\r\n                )\r\n            ));\r\n            setDirection({\r\n                [index]: direction[index] === 'asc'\r\n                ? 'desc' : 'asc'\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    let IndexOfLastRow = currentPage * rowsPerPage;\r\n    let IndexOfFirstRow = IndexOfLastRow - rowsPerPage;\r\n    let currentRows = data.slice(IndexOfFirstRow, IndexOfLastRow);\r\n\r\n    const paginate = (number) => setCurrentPage(number);\r\n\r\n    return (\r\n        <div>\r\n            <Pagination\r\n                rowsPerPage={rowsPerPage}\r\n                totalRows={data.length}\r\n                paginate={paginate}\r\n            />\r\n            <Table \r\n                data={currentRows}\r\n                onSort={onSort}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sort;","D:\\React.js\\csv_to_table\\src\\Pagination.js",[],{"ruleId":"28","severity":1,"message":"29","line":1,"column":27,"nodeType":"30","messageId":"31","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]